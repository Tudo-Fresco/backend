"""Initial migration

Revision ID: 1aa38dfd1c95
Revises: 
Create Date: 2025-04-19 14:41:36.560132

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1aa38dfd1c95'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('zip_code', sa.String(length=20), nullable=False),
    sa.Column('street_address', sa.String(length=256), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('province', sa.String(length=100), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('neighbourhood', sa.String(length=100), nullable=False),
    sa.Column('number', sa.String(length=20), nullable=False),
    sa.Column('additional_info', sa.String(length=256), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('product',
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('unit_type', sa.Enum('PIECE', 'GRAM', 'KILOGRAM', 'METRIC_TON', name='unittype'), nullable=False),
    sa.Column('type', sa.Enum('BEEF', 'WHITE_MEAT', 'SEAWEED', 'SPICE', 'SEAFOOD', 'PROCESSED_MEAT', 'PRESERVED_MEAT', 'PRESERVED_PRODUCT', 'PORK', 'ROOT_VEGETABLE', 'NUT', 'MUSHROOM', 'VEGETABLE', 'HERB', 'GRAIN', 'FRUIT', 'EGG', 'DAIRY', name='producttype'), nullable=False),
    sa.Column('images', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('search_name', sa.String(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('user',
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'NOT_APPLICABLE', 'NOT_KNOWN', name='gendertype'), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('profile_picture', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('user_access', sa.Enum('ADMIN', 'GUEST', name='useraccess'), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('email')
    )
    op.create_table('store',
    sa.Column('images', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('cnpj', sa.String(length=18), nullable=False),
    sa.Column('address_uuid', sa.UUID(), nullable=False),
    sa.Column('reputation', sa.Float(), nullable=False),
    sa.Column('trade_name', sa.String(length=256), nullable=False),
    sa.Column('legal_name', sa.String(length=256), nullable=False),
    sa.Column('owner_uuid', sa.UUID(), nullable=False),
    sa.Column('legal_phone_contact', sa.String(length=20), nullable=False),
    sa.Column('preferred_phone_contact', sa.String(length=20), nullable=False),
    sa.Column('legal_email_contact', sa.String(length=256), nullable=False),
    sa.Column('preferred_email_contact', sa.String(length=256), nullable=False),
    sa.Column('store_type', sa.Enum('SUPPLIER', 'RETAILER', name='storetype'), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['address_uuid'], ['address.uuid'], ),
    sa.ForeignKeyConstraint(['owner_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('cnpj')
    )
    op.create_table('demand',
    sa.Column('store_uuid', sa.UUID(), nullable=False),
    sa.Column('product_uuid', sa.UUID(), nullable=False),
    sa.Column('responsible_uuid', sa.UUID(), nullable=False),
    sa.Column('needed_count', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=False),
    sa.Column('deadline', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('OPENED', 'CLOSED', 'CANCELED', name='demandstatus'), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['product_uuid'], ['product.uuid'], ),
    sa.ForeignKeyConstraint(['responsible_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['store_uuid'], ['store.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('demand')
    op.drop_table('store')
    op.drop_table('user')
    op.drop_table('product')
    op.drop_table('address')
    # ### end Alembic commands ###
